apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: build-and-test-triggertemplate-frontend
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
 params:
 - name: gitrepository
 - name: gitid
 resourcetemplates:
 - apiVersion: tekton.dev/v1beta1
   kind: PipelineRun
   metadata:
     generateName: build-and-test-frontend-
     namespace: manuela-cicd
     labels:
       app: manuela
       tekton.dev/pipeline: build-and-test
   spec:
     params:
        - name: S2I_BUILDER_IMAGE
          value: quay.io/luisarizmendi/ubi8-s2i-web-app
        - name: LOCAL_IMAGE
          value: image-registry.openshift-image-registry.svc:5000/manuela-test/iot-frontend
        - name: PATH_CONTEXT
          value: .
        - name: COMPONENT_NAME
          value: iot-frontend
        - name: CONFIGMAP_PREFIX
          value: IOT_FRONTEND
        - name: CHAINED_BUILD_DOCKERFILE
          #value: "FROM centos/httpd-24-centos7\nCOPY --from=0 /opt/app-root/output /var/www/html/"
          value: "FROM quay.io/luisarizmendi/httpd-ionic\nCOPY --from=0 /opt/app-root/output /var/www/html/"
     pipelineRef:
       name: build-and-test
     serviceAccountName: pipeline
     timeout: 1h0m0s
     workspaces:
        - name: config
          configMap:
            name: pipeline-config
        - name: github-secret
          secret:
            secretName: github
        - name: argocd-env-secret
          secret:
            secretName: argocd-env
        - name: build-artifacts
          persistentVolumeClaim:
            claimName: build-artifacts
        - name: gitrepos
          # volumeClaimTemplate:
          #   spec:
          #     accessModes: 
          #     - ReadWriteMany
          #     resources:
          #       requests:
          #         storage: 1Gi
          persistentVolumeClaim:
            claimName: iot-frontend-gitrepos